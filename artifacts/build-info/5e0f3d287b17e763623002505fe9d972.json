{
	"id": "5e0f3d287b17e763623002505fe9d972",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Basics.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.13 and less than 0.9.0\npragma solidity ^0.8.13;\n\ncontract Basics {\n\n    uint public y = 30;\n\n    function ifelse(uint x) public view returns (uint) {\n        if (x < 10) {\n            return 0;\n        } else if (x < 20) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n\n    function ternary(uint x) public pure returns (uint) {\n        return (x<10) ? 1 : 2;\n    }\n\n    function loop () public pure {\n        for (uint i = 0; i < 10; i++) {\n            if (i == 2) {\n\n            } else {\n\n            }\n        }\n\n        uint j;\n        while (j< 10) {\n            j++;\n        }\n    }\n\n\n\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Basics.sol": {
				"Basics": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "ifelse",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "y",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Basics.sol\":138:715  contract Basics {... */\n  mstore(0x40, 0x80)\n    /* \"Basics.sol\":177:179  30 */\n  0x1e\n    /* \"Basics.sol\":161:179  uint public y = 30 */\n  0x00\n  sstore\n    /* \"Basics.sol\":138:715  contract Basics {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Basics.sol\":138:715  contract Basics {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x55278c5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x65109810\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa56dfe4a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Basics.sol\":395:485  function ternary(uint x) public pure returns (uint) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basics.sol\":186:388  function ifelse(uint x) public view returns (uint) {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basics.sol\":161:179  uint public y = 30 */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basics.sol\":491:708  function loop () public pure {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Basics.sol\":395:485  function ternary(uint x) public pure returns (uint) {... */\n    tag_10:\n        /* \"Basics.sol\":441:445  uint */\n      0x00\n        /* \"Basics.sol\":467:469  10 */\n      0x0a\n        /* \"Basics.sol\":465:466  x */\n      dup3\n        /* \"Basics.sol\":465:469  x<10 */\n      lt\n        /* \"Basics.sol\":464:478  (x<10) ? 1 : 2 */\n      tag_23\n      jumpi\n        /* \"Basics.sol\":477:478  2 */\n      0x02\n        /* \"Basics.sol\":464:478  (x<10) ? 1 : 2 */\n      jump(tag_24)\n    tag_23:\n        /* \"Basics.sol\":473:474  1 */\n      0x01\n        /* \"Basics.sol\":464:478  (x<10) ? 1 : 2 */\n    tag_24:\n        /* \"Basics.sol\":457:478  return (x<10) ? 1 : 2 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"Basics.sol\":395:485  function ternary(uint x) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Basics.sol\":186:388  function ifelse(uint x) public view returns (uint) {... */\n    tag_15:\n        /* \"Basics.sol\":231:235  uint */\n      0x00\n        /* \"Basics.sol\":255:257  10 */\n      0x0a\n        /* \"Basics.sol\":251:252  x */\n      dup3\n        /* \"Basics.sol\":251:257  x < 10 */\n      lt\n        /* \"Basics.sol\":247:382  if (x < 10) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"Basics.sol\":280:281  0 */\n      0x00\n        /* \"Basics.sol\":273:281  return 0 */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"Basics.sol\":247:382  if (x < 10) {... */\n    tag_26:\n        /* \"Basics.sol\":306:308  20 */\n      0x14\n        /* \"Basics.sol\":302:303  x */\n      dup3\n        /* \"Basics.sol\":302:308  x < 20 */\n      lt\n        /* \"Basics.sol\":298:382  if (x < 20) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"Basics.sol\":331:332  1 */\n      0x01\n        /* \"Basics.sol\":324:332  return 1 */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"Basics.sol\":298:382  if (x < 20) {... */\n    tag_28:\n        /* \"Basics.sol\":370:371  2 */\n      0x02\n        /* \"Basics.sol\":363:371  return 2 */\n      swap1\n      pop\n        /* \"Basics.sol\":186:388  function ifelse(uint x) public view returns (uint) {... */\n    tag_25:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Basics.sol\":161:179  uint public y = 30 */\n    tag_18:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Basics.sol\":491:708  function loop () public pure {... */\n    tag_21:\n        /* \"Basics.sol\":535:541  uint i */\n      0x00\n        /* \"Basics.sol\":530:634  for (uint i = 0; i < 10; i++) {... */\n    tag_31:\n        /* \"Basics.sol\":551:553  10 */\n      0x0a\n        /* \"Basics.sol\":547:548  i */\n      dup2\n        /* \"Basics.sol\":547:553  i < 10 */\n      lt\n        /* \"Basics.sol\":530:634  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"Basics.sol\":555:558  i++ */\n      dup1\n      dup1\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      swap2\n      pop\n      pop\n        /* \"Basics.sol\":530:634  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_31)\n    tag_32:\n      pop\n        /* \"Basics.sol\":644:650  uint j */\n      0x00\n        /* \"Basics.sol\":660:702  while (j< 10) {... */\n    tag_38:\n        /* \"Basics.sol\":670:672  10 */\n      0x0a\n        /* \"Basics.sol\":667:668  j */\n      dup2\n        /* \"Basics.sol\":667:672  j< 10 */\n      lt\n        /* \"Basics.sol\":660:702  while (j< 10) {... */\n      iszero\n      tag_39\n      jumpi\n        /* \"Basics.sol\":688:691  j++ */\n      dup1\n      dup1\n      tag_40\n      swap1\n      tag_37\n      jump\t// in\n    tag_40:\n      swap2\n      pop\n      pop\n        /* \"Basics.sol\":660:702  while (j< 10) {... */\n      jump(tag_38)\n    tag_39:\n        /* \"Basics.sol\":520:708  {... */\n      pop\n        /* \"Basics.sol\":491:708  function loop () public pure {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_42:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_44:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_45:\n        /* \"#utility.yul\":490:514   */\n      tag_55\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_44\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_56:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_46:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_58\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_45\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_61\n      tag_42\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":766:885   */\n    tag_60:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_62\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_47:\n        /* \"#utility.yul\":1112:1136   */\n      tag_64\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_44\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_12:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_66\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_47\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_48:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x11\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1796   */\n    tag_37:\n        /* \"#utility.yul\":1602:1605   */\n      0x00\n        /* \"#utility.yul\":1625:1649   */\n      tag_69\n        /* \"#utility.yul\":1643:1648   */\n      dup3\n        /* \"#utility.yul\":1625:1649   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1616:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1671:1737   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1664:1669   */\n      dup3\n        /* \"#utility.yul\":1661:1738   */\n      sub\n        /* \"#utility.yul\":1658:1761   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1741:1759   */\n      tag_71\n      tag_48\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1658:1761   */\n    tag_70:\n        /* \"#utility.yul\":1788:1789   */\n      0x01\n        /* \"#utility.yul\":1781:1786   */\n      dup3\n        /* \"#utility.yul\":1777:1790   */\n      add\n        /* \"#utility.yul\":1770:1790   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ba419a8057f5d452cf9b136adbd98d0c5eeb9b3f619b6ed08e222a978a06a0c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052601e60005534801561001557600080fd5b506102ae806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806355278c5b146100515780636510981014610081578063a56dfe4a146100b1578063a92100cb146100cf575b600080fd5b61006b600480360381019061006691906101aa565b6100d9565b60405161007891906101e6565b60405180910390f35b61009b600480360381019061009691906101aa565b6100f7565b6040516100a891906101e6565b60405180910390f35b6100b9610127565b6040516100c691906101e6565b60405180910390f35b6100d761012d565b005b6000600a82106100ea5760026100ed565b60015b60ff169050919050565b6000600a82101561010b5760009050610122565b601482101561011d5760019050610122565b600290505b919050565b60005481565b60005b600a81101561014c57808061014490610230565b915050610130565b5060005b600a81101561016c57808061016490610230565b915050610150565b50565b600080fd5b6000819050919050565b61018781610174565b811461019257600080fd5b50565b6000813590506101a48161017e565b92915050565b6000602082840312156101c0576101bf61016f565b5b60006101ce84828501610195565b91505092915050565b6101e081610174565b82525050565b60006020820190506101fb60008301846101d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061023b82610174565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361026d5761026c610201565b5b60018201905091905056fea26469706673582212207ba419a8057f5d452cf9b136adbd98d0c5eeb9b3f619b6ed08e222a978a06a0c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1E PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55278C5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x65109810 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA56DFE4A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH2 0xEA JUMPI PUSH1 0x2 PUSH2 0xED JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x122 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x122 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x14C JUMPI DUP1 DUP1 PUSH2 0x144 SWAP1 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x130 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x16C JUMPI DUP1 DUP1 PUSH2 0x164 SWAP1 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x150 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP2 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x17E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1BF PUSH2 0x16F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE DUP5 DUP3 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B DUP3 PUSH2 0x174 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26D JUMPI PUSH2 0x26C PUSH2 0x201 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xA419A8057F5D452CF9B136ADBD98D0C5EEB9B3F619B6ED08E222A978 LOG0 PUSH11 0xC64736F6C634300081100 CALLER ",
							"sourceMap": "138:577:0:-:0;;;177:2;161:18;;138:577;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ifelse_29": {
									"entryPoint": 247,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@loop_78": {
									"entryPoint": 301,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ternary_45": {
									"entryPoint": 217,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@y_4": {
									"entryPoint": 295,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1799:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1606:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1616:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1643:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1625:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1616:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1739:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1741:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1741:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1664:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1661:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:77:1"
															},
															"nodeType": "YulIf",
															"src": "1658:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1770:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1781:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1788:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1602:3:1",
														"type": ""
													}
												],
												"src": "1563:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806355278c5b146100515780636510981014610081578063a56dfe4a146100b1578063a92100cb146100cf575b600080fd5b61006b600480360381019061006691906101aa565b6100d9565b60405161007891906101e6565b60405180910390f35b61009b600480360381019061009691906101aa565b6100f7565b6040516100a891906101e6565b60405180910390f35b6100b9610127565b6040516100c691906101e6565b60405180910390f35b6100d761012d565b005b6000600a82106100ea5760026100ed565b60015b60ff169050919050565b6000600a82101561010b5760009050610122565b601482101561011d5760019050610122565b600290505b919050565b60005481565b60005b600a81101561014c57808061014490610230565b915050610130565b5060005b600a81101561016c57808061016490610230565b915050610150565b50565b600080fd5b6000819050919050565b61018781610174565b811461019257600080fd5b50565b6000813590506101a48161017e565b92915050565b6000602082840312156101c0576101bf61016f565b5b60006101ce84828501610195565b91505092915050565b6101e081610174565b82525050565b60006020820190506101fb60008301846101d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061023b82610174565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361026d5761026c610201565b5b60018201905091905056fea26469706673582212207ba419a8057f5d452cf9b136adbd98d0c5eeb9b3f619b6ed08e222a978a06a0c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55278C5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x65109810 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA56DFE4A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH2 0xEA JUMPI PUSH1 0x2 PUSH2 0xED JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x122 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x122 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x14C JUMPI DUP1 DUP1 PUSH2 0x144 SWAP1 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x130 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x16C JUMPI DUP1 DUP1 PUSH2 0x164 SWAP1 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x150 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP2 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x17E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1BF PUSH2 0x16F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE DUP5 DUP3 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP2 PUSH2 0x174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B DUP3 PUSH2 0x174 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26D JUMPI PUSH2 0x26C PUSH2 0x201 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xA419A8057F5D452CF9B136ADBD98D0C5EEB9B3F619B6ED08E222A978 LOG0 PUSH11 0xC64736F6C634300081100 CALLER ",
							"sourceMap": "138:577:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;186:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:217;;;:::i;:::-;;395:90;441:4;467:2;465:1;:4;464:14;;477:1;464:14;;;473:1;464:14;457:21;;;;395:90;;;:::o;186:202::-;231:4;255:2;251:1;:6;247:135;;;280:1;273:8;;;;247:135;306:2;302:1;:6;298:84;;;331:1;324:8;;;;298:84;370:1;363:8;;186:202;;;;:::o;161:18::-;;;;:::o;491:217::-;535:6;530:104;551:2;547:1;:6;530:104;;;555:3;;;;;:::i;:::-;;;;530:104;;;;644:6;660:42;670:2;667:1;:5;660:42;;;688:3;;;;;:::i;:::-;;;;660:42;;;520:188;491:217::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:233;1602:3;1625:24;1643:5;1625:24;:::i;:::-;1616:33;;1671:66;1664:5;1661:77;1658:103;;1741:18;;:::i;:::-;1658:103;1788:1;1781:5;1777:13;1770:20;;1563:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "137200",
								"executionCost": "22289",
								"totalCost": "159489"
							},
							"external": {
								"ifelse(uint256)": "infinite",
								"loop()": "infinite",
								"ternary(uint256)": "infinite",
								"y()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 177,
									"end": 179,
									"name": "PUSH",
									"source": 0,
									"value": "1E"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 138,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 715,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ba419a8057f5d452cf9b136adbd98d0c5eeb9b3f619b6ed08e222a978a06a0c64736f6c63430008110033",
									".code": [
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "55278C5B"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "65109810"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "A56DFE4A"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 186,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 186,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 161,
											"end": 179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 161,
											"end": 179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 491,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 491,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 469,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 464,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 477,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 457,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 251,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 257,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 247,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 273,
											"end": 281,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 247,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 302,
											"end": 308,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 298,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 298,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 324,
											"end": 332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 298,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 491,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 535,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 547,
											"end": 548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 547,
											"end": 553,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 530,
											"end": 634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 530,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 555,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 555,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 555,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 634,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 667,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 660,
											"end": 702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 660,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 660,
											"end": 702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 688,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 702,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 660,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1796,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1563,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1643,
											"end": 1648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1625,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1664,
											"end": 1669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1741,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Basics.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ifelse(uint256)": "65109810",
							"loop()": "a92100cb",
							"ternary(uint256)": "55278c5b",
							"y()": "a56dfe4a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ifelse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"y\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Basics.sol\":\"Basics\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Basics.sol\":{\"keccak256\":\"0x631f5d97321b51ac4176e8b67aaeccacf77e6523e6881604cf03a483119b3701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef90c88a6f203c7df8508cd214a9248b273bc93709cbab67a3a179bc0b4a5c0\",\"dweb:/ipfs/Qmeu6YMDb3gfBzUYXGk5DaMMxLKmaj71sghvZfnTdHJSJ6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "Basics.sol:Basics",
								"label": "y",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> Basics.sol:9:5:\n  |\n9 |     function ifelse(uint x) public view returns (uint) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 388,
					"file": "Basics.sol",
					"start": 186
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Basics.sol": {
				"ast": {
					"absolutePath": "Basics.sol",
					"exportedSymbols": {
						"Basics": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Basics",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "Basics",
							"nameLocation": "147:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a56dfe4a",
									"id": 4,
									"mutability": "mutable",
									"name": "y",
									"nameLocation": "173:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 79,
									"src": "161:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "161:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "177:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "237:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "255:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "251:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 17,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "306:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "302:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 25,
														"nodeType": "Block",
														"src": "349:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 10,
																"id": 24,
																"nodeType": "Return",
																"src": "363:8:0"
															}
														]
													},
													"id": 26,
													"nodeType": "IfStatement",
													"src": "298:84:0",
													"trueBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "310:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 10,
																"id": 21,
																"nodeType": "Return",
																"src": "324:8:0"
															}
														]
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "247:135:0",
												"trueBody": {
													"id": 16,
													"nodeType": "Block",
													"src": "259:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "280:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 10,
															"id": 15,
															"nodeType": "Return",
															"src": "273:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "65109810",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ifelse",
									"nameLocation": "195:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "207:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "202:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:8:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "231:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:6:0"
									},
									"scope": 79,
									"src": "186:202:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "447:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 36,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "465:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "465:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 39,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "464:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "464:14:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 35,
												"id": 43,
												"nodeType": "Return",
												"src": "457:21:0"
											}
										]
									},
									"functionSelector": "55278c5b",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "404:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "412:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:8:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "441:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:6:0"
									},
									"scope": 79,
									"src": "395:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "520:188:0",
										"statements": [
											{
												"body": {
													"id": 64,
													"nodeType": "Block",
													"src": "560:74:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 58,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "583:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "578:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 62,
																"nodeType": "Block",
																"src": "608:16:0",
																"statements": []
															},
															"id": 63,
															"nodeType": "IfStatement",
															"src": "574:50:0",
															"trueBody": {
																"id": 61,
																"nodeType": "Block",
																"src": "586:16:0",
																"statements": []
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 52,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "551:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"initializationExpression": {
													"assignments": [
														49
													],
													"declarations": [
														{
															"constant": false,
															"id": 49,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "540:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 65,
															"src": "535:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 48,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "535:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 51,
													"initialValue": {
														"hexValue": "30",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "544:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "535:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "555:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "555:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "555:3:0"
												},
												"nodeType": "ForStatement",
												"src": "530:104:0"
											},
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "649:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 77,
														"src": "644:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 66,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"nodeType": "VariableDeclarationStatement",
												"src": "644:6:0"
											},
											{
												"body": {
													"id": 75,
													"nodeType": "Block",
													"src": "674:28:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "688:3:0",
																"subExpression": {
																	"id": 72,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "688:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "688:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 69,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "667:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "670:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "667:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "WhileStatement",
												"src": "660:42:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "500:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:0"
									},
									"scope": 79,
									"src": "491:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 80,
							"src": "138:577:0",
							"usedErrors": []
						}
					],
					"src": "112:603:0"
				},
				"id": 0
			}
		}
	}
}